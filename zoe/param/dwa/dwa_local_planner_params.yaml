TrajectoryPlannerROS:

# ROBOT CONFIGURATION PARAMETERS
  #The x acceleration limit of the robot in meters/sec^2
  acc_lim_x: 1.2
  #The y acceleration limit of the robot in meters/sec^2
  acc_lim_y: 1.2
  # The rotational acceleration limit of the robot in radians/sec^2
  acc_lim_th: 1.2
  max_vel_trans: 0.7
  min_vel_trans: 0.1
  #The maximum forward velocity allowed for the base in meters/sec
  # the maximum velocity for spot is 1.6 meters?second, I impose hal of it for safety
  max_vel_x: 0.8
  # The minimum forward velocity allowed for the base in meters/sec. It is useful to specify this to guarantee that velocity commands sent to a mobile base are high enough to allow the base to overcome friction.
  min_vel_x: 0.0
  max_vel_y: 0.5
  min_vel_y: 0.0
  max_rot_vel: 1.0
  min_rot_vel: 0.4

# GOAL TOLERANCE PARAMETERS
  # The tolerance in radians for the controller in yaw/rotation when achieving its goal
  yaw_goal_tolerance: 0.1
  # The tolerance in meters for the controller in the x & y distance when achieving a goal
  xy_goal_tolerance: 0.2
  # If goal tolerance is latched, if the robot ever reaches the goal xy location it will simply rotate in place, even if it ends up outside the goal tolerance while it is doing so
  # capire se mi serve settarlo
  latch_xy_goal_tolerance: false
  
# FORWARD SIMULATION PARAMETERS
  # The amount of time to forward-simulate trajectories in seconds
  sim_time: 1.0
  # The step size, in meters, to take between points on a given trajectory
  sim_granularity: 0.05
  # The number of samples to use when exploring the x velocity space
  vx_samples: 8
  vy_samples: 8
  #The number of samples to use when exploring the theta velocity space
  vth_samples: 20
  # The frequency at which this controller will be called in Hz.
  controller_frequency: 20.0

# TRAJECOTRY SCORING PARAMETERS
 path_distance_bias: 32.0
 goal_distance_bias: 24.0
 occdist_scale: 36.0


# OSCILLATION PREVENTION PARAMETERS
 
  # How far the robot must travel in meters before oscillation flags are reset
  oscillation_reset_dist: 0.1

# GLOBAL PLAN_PARAMETERS
  # Defines whether or not to eat up the plan as the robot moves along the path. If set to true, points will fall off the end of the plan once the robot moves 1 meter past them.
  prune_plan: true
